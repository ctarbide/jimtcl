#!/bin/sh

# This script writes to stdout, a single source file (e.g. jimsh0.c)
# which can be compiled to provide a bootstrap version of jimsh.
# e.g. cc -o jimsh0 jimsh0.c

set -eu

makeext()
{
	source=$1
	basename=${source%.tcl}
cat <<EOF
int Jim_${basename}Init(Jim_Interp *interp)
{
	if (Jim_PackageProvide(interp, "$basename", "1.0", JIM_ERRMSG))
		return JIM_ERR;
	return Jim_EvalSource(interp, "$source", 1, (const char*)ext_tcl_source_${basename});
}
EOF
}

makeloadexts()
{
cat <<EOF
int Jim_InitStaticExtensions(Jim_Interp *interp)
EOF
    echo "{"
    for ext in $*; do
        echo "extern int Jim_${ext}Init(Jim_Interp *);"
    done
    for ext in $*; do
        echo "Jim_${ext}Init(interp);"
    done
    echo "return JIM_OK;"
    echo "}"
}

cexts="aio readdir regexp file exec clock array posix"
tclexts="bootstrap initjimsh glob stdlib tclcompat"

# Note ordering
allexts="bootstrap aio readdir regexp file glob exec posix clock array stdlib tclcompat"

echo; echo '<<headers>>='
echo '<<jimsh0.h>>'
echo '<<jimsh0.h>>='

echo "/* This is single source file, bootstrap version of Jim Tcl. See http://jim.tcl.tk/ */"

# define some core features
for i in JIM_TCL_COMPAT JIM_ANSIC JIM_REGEXP HAVE_NO_AUTOCONF JIM_TINY _JIMAUTOCONF_H; do
	echo "#define $i"
done
echo '#define TCL_LIBRARY "."'
# and extensions
for i in $allexts; do
	echo "#define jim_ext_$i"
done

cat <<EOF
#if defined(_MSC_VER)
#define TCL_PLATFORM_OS "windows"
#define TCL_PLATFORM_PLATFORM "windows"
#define TCL_PLATFORM_PATH_SEPARATOR ";"
#define HAVE_MKDIR_ONE_ARG
#define HAVE_SYSTEM
#elif defined(__MINGW32__)
#define TCL_PLATFORM_OS "mingw"
#define TCL_PLATFORM_PLATFORM "windows"
#define TCL_PLATFORM_PATH_SEPARATOR ";"
#define HAVE_MKDIR_ONE_ARG
#define HAVE_SYSTEM
#define HAVE_SYS_TIME_H
#define HAVE_DIRENT_H
#define HAVE_UNISTD_H
#define HAVE_UMASK
#include <sys/stat.h>
#ifndef S_IRWXG
#define S_IRWXG 0
#endif
#ifndef S_IRWXO
#define S_IRWXO 0
#endif
#else
#define TCL_PLATFORM_OS "unknown"
#define TCL_PLATFORM_PLATFORM "unix"
#define TCL_PLATFORM_PATH_SEPARATOR ":"
#ifdef _MINIX
#define vfork fork
#define _POSIX_SOURCE
#else
#define _GNU_SOURCE
#endif
#define HAVE_FORK
#define HAVE_WAITPID
#define HAVE_ISATTY
#define HAVE_MKSTEMP
#define HAVE_LINK
#define HAVE_SYS_TIME_H
#define HAVE_DIRENT_H
#define HAVE_UNISTD_H
#define HAVE_UMASK
#define HAVE_PIPE
#define _FILE_OFFSET_BITS 64
#endif
EOF

# get JIM_VERSION from auto.def
sed -n -e 's/^\(define JIM_VERSION.*\)/#\1/p' auto.def

echo '@'

outputsource()
{
	sed \
		-e '/#include.*jim/d' \
		-e '/#include.*utf8/d' \
		-e '/^#.*if.*JIM_BOOTSTRAP/,/^#endif.*JIM_BOOTSTRAP/d' \
		-e 's/<</@<</g' \
		-e 's/^@\( \|$\)/@@\1/' \
		$1
}

# also strip comments, useful to compare with make-bootstrap-jim
outputsource_SKIP()
{
	sed \
		-e '/#include.*jim/d' \
		-e '/#include.*utf8/d' \
		-e '/^#.*if.*JIM_BOOTSTRAP/,/^#endif.*JIM_BOOTSTRAP/d' \
		-e 's/[ 	]*\/\*.*\*\///' \
		-e '/^[ 	]*\/\*/,/\*\//d' \
		-e 's/<</@<</g' \
		-e 's/^@\( \|$\)/@@\1/' \
		$1
}

# Now output header files, removing references to jim header files
for i in jim-win32compat.h utf8.h jim.h jim-subcmd.h jimregexp.h jim-signal.h jimiocompat.h; do
	echo; echo '<<headers>>='
	echo "<<${i}>>"
	echo "<<${i}>>="
	outputsource $i
	echo '@'
done

# Now extension source code
for i in $tclexts; do
	echo; echo "<<extension tcl source>>="
	echo "<<extension tcl source - ${i}>>"
	echo "<<extension tcl source - ${i}>>="
	NAME="ext_tcl_source_${i}" ./arrayify.pl <"${i}.tcl"
	echo '@'

	echo; echo "<<extension initialization>>="
	echo "<<extension initialization - ${i}>>"
	echo "<<extension initialization - ${i}>>="
	makeext "${i}.tcl"
	echo '@'
done
for i in $cexts; do
	echo; echo '<<extension implementation>>='
	echo "<<extension implementation - ${i}>>"
	echo "<<extension implementation - ${i}>>="
	outputsource jim-$i.c
	echo '@'
done

echo; echo "<<makeloadexts>>="
makeloadexts $allexts
echo '@'

# And finally the core source code
for i in jim.c jim-subcmd.c utf8.c jim-format.c jimregexp.c jimiocompat.c jim-win32compat.c jim-nosignal.c; do
	echo; echo '<<core implementation>>='
	echo "<<core implementation - ${i}>>"
	echo "<<core implementation - ${i}>>="
	outputsource $i
	echo '@'
done

echo; echo "<<jimsh0.c>>="
echo "#ifndef JIM_BOOTSTRAP_LIB_ONLY"
outputsource jim-interactive.c
outputsource jimsh.c
echo "#endif"
echo '@'

echo
cat<<'EOF'
<<jimsh_bootstrap_noweb.c>>=
<<headers>>
<<extension implementation>>
<<extension tcl source>>
<<extension initialization>>
<<makeloadexts>>
<<core implementation>>
<<jimsh0.c>>
@
EOF
